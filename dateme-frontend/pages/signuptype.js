import withRedux from "next-redux-wrapper";
import { bindActionCreators } from "redux";
import Head from "../components/head";
import Page from "../components/Page";
import Text from "../components/Text";
import { Link } from "../routes";
import withLogin from "../lib/withLogin";
import { initStore, setCurrentUser, updateEntities } from "../redux/store";

const YourselfIcon = props => (
  <svg width={104} height={158} {...props}>
    <g fill="none" fillRule="evenodd">
      <path
        d="M52.005 155c18.038 0 34.903-4.987 49.322-13.632l-24.749-10.26a16.985 16.985 0 0 1-5.5-3.662 16.901 16.901 0 0 1-4.956-11.979v-4.106c-4.39 2.64-9.147 4.113-14.12 4.113-4.98 0-9.736-1.473-14.116-4.113v4.106c0 4.67-1.896 8.911-4.959 11.979a16.95 16.95 0 0 1-5.498 3.662L2.68 141.361C17.097 150.013 33.964 155 52.005 155z"
        stroke="#333"
        strokeWidth={4.8}
        fill="#FCD3C9"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M37.202 120.2c4.653 2.412 9.624 3.744 14.8 3.744 5.17 0 10.143-1.332 14.804-3.746a16.751 16.751 0 0 1-.684-4.733v-4.107c-4.39 2.64-9.147 4.114-14.12 4.114-4.98 0-9.736-1.474-14.116-4.114v4.107c0 1.644-.248 3.23-.684 4.735z"
        fill="#EAC5BD"
      />
      <path
        d="M91.202 41.725c0-21.65-17.552-39.202-39.2-39.202-21.65 0-39.199 17.551-39.199 39.202v6.777C7.691 50.32 4.005 55.141 4.005 60.88c0 11.235 5.7 20.326 12.801 20.643 6.536 20.14 19.824 33.95 35.194 33.95 15.365 0 28.656-13.81 35.2-33.943 7.098-.32 12.802-9.415 12.802-20.65 0-5.738-3.688-10.56-8.803-12.377v-6.777h.003z"
        stroke="#333"
        strokeWidth={4.8}
        fill="#FCD3C9"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M19.377 46.453c0-22.253 16.55-40.625 38.009-43.517-1.767-.245-3.555-.413-5.386-.413-21.65 0-39.2 17.551-39.2 39.202v6.777C7.69 50.32 4.003 55.141 4.003 60.88c0 11.235 5.7 20.326 12.802 20.643 6.538 20.14 19.826 33.95 35.196 33.95 1.877 0 3.722-.211 5.527-.612-21.525-4.44-38.15-33.358-38.15-68.407z"
        fill="#EAC5BD"
      />
      <path
        d="M91.202 41.725c0-21.65-17.552-39.202-39.2-39.202-21.65 0-39.199 17.551-39.199 39.202v6.777C7.691 50.32 4.005 55.141 4.005 60.88c0 11.235 5.7 20.326 12.801 20.643 6.536 20.14 19.824 33.95 35.194 33.95 15.365 0 28.656-13.81 35.2-33.943 7.098-.32 12.802-9.415 12.802-20.65 0-5.738-3.688-10.56-8.803-12.377v-6.777h.003z"
        stroke="#333"
        strokeWidth={4.8}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M52.005 155c18.038 0 34.903-4.987 49.322-13.632l-24.749-10.26a16.985 16.985 0 0 1-5.5-3.662 16.901 16.901 0 0 1-4.956-11.979v-4.106c-4.39 2.64-9.147 4.113-14.12 4.113-4.98 0-9.736-1.473-14.116-4.113v4.106c0 4.67-1.896 8.911-4.959 11.979a16.95 16.95 0 0 1-5.498 3.662L2.68 141.361C17.097 150.013 33.964 155 52.005 155z"
        stroke="#333"
        strokeWidth={4.8}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </g>
  </svg>
);

const FriendIcon = props => (
  <svg width={192} height={158} {...props}>
    <g fill="none" fillRule="evenodd">
      <path
        d="M135.009 3.14c-20.114 0-37.621 11.053-46.914 27.417 2.276 2.639 3.708 6.043 3.708 9.818V61.22c4.539 1.62 7.81 5.917 7.81 11.023 0 10.019-5.066 18.13-11.36 18.403 0 .007-.007.007-.007.014v25.209c0 6.211-2.827 11.727-7.228 15.412v13.043c.242.114.46.27.709.378l29.25 12.157H189V57.315c0-29.93-24.175-54.175-53.991-54.175z"
        stroke="#333"
        strokeWidth={4.655}
        fill="#FAD05A"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M169.814 61.221c-8.307 0-15.031-6.764-15.031-15.101h-.01c-9.295 9.329-22.133 15.101-36.32 15.101h-18.259a11.813 11.813 0 0 0-4.192 2.618c2.218 2.119 3.611 5.085 3.611 8.407 0 5.227-1.395 9.905-3.61 13.249 2.029 3.064 4.735 5.017 7.749 5.154 5.805 17.953 17.602 30.254 31.255 30.254 13.643 0 25.449-12.299 31.261-30.254 6.294-.273 11.36-8.383 11.36-18.403.003-5.11-3.269-9.405-7.814-11.025zm-88.087 83.48a17.097 17.097 0 0 1-5.534-3.708 17.167 17.167 0 0 1-3.67-5.492c-1.396.31-2.835.499-4.328.499H45.782h.017a19.95 19.95 0 0 1-4.337-.5 17.192 17.192 0 0 1-3.67 5.493 17.172 17.172 0 0 1-5.534 3.708L3 156.858h107.982L81.727 144.7z"
        stroke="#333"
        strokeWidth={4.655}
        fill="#FCD3C9"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M39.881 144.234h34.234c1.909 0 3.748-.238 5.552-.58a16.762 16.762 0 0 1-3.474-2.66 17.167 17.167 0 0 1-3.67-5.493c-1.396.31-2.835.499-4.328.499H45.782h.017a19.95 19.95 0 0 1-4.337-.5 17.192 17.192 0 0 1-3.67 5.493 17.021 17.021 0 0 1-3.477 2.66l5.566.581z"
        fill="#EAC5BD"
      />
      <path
        d="M110.975 156.858H189L159.742 144.7a17.146 17.146 0 0 1-5.533-3.708 17.07 17.07 0 0 1-4.997-12.098v-12.742c-4.334 3.052-9.144 4.743-14.2 4.743-5.058 0-9.87-1.694-14.211-4.743v12.742a17.1 17.1 0 0 1-4.99 12.098 17.097 17.097 0 0 1-5.533 3.708l-14.28 5.931 14.977 6.226z"
        stroke="#333"
        strokeWidth={4.655}
        fill="#FCD3C9"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M120.798 125.192c4.441 2.539 9.221 3.941 14.21 3.941 4.99 0 9.773-1.405 14.202-3.939v-9.039c-4.334 3.052-9.144 4.744-14.201 4.744s-9.87-1.694-14.21-4.744v9.037z"
        fill="#EAC5BD"
      />
      <path
        d="M69.514 108.273l-1.254-5.007c-.685-2.756-3.708-5.008-6.717-5.008H52.43c-3.006 0-6.03 2.254-6.716 5.008-.686 2.753-1.244 5.007-1.244 5.007-8.112-3.276-14.806-9.548-18.735-17.614v-.014c-6.31-.28-11.37-8.384-11.37-18.403 0-5.106 3.281-9.404 7.82-11.023V50.437c0-16.667 13.464-30.187 30.078-30.187 6.943 0 13.313 2.376 18.41 6.338a14.881 14.881 0 0 1 6.084-1.31c8.317 0 15.045 6.758 15.045 15.095v20.844c4.538 1.619 7.81 5.917 7.81 11.022 0 10.02-5.066 18.13-11.36 18.403 0 .007-.007.007-.007.014v-.007c-3.925 8.076-10.618 14.348-18.73 17.624z"
        stroke="#333"
        strokeWidth={4.655}
        fill="#FCD3C9"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M126.48 103.891c4.704 4.727 12.344 4.727 17.055 0-4.71 4.73-12.348 4.73-17.054 0zm-44.753 40.81a17.097 17.097 0 0 1-5.534-3.708 17.167 17.167 0 0 1-3.67-5.492c-1.396.31-2.835.499-4.328.499H45.782h.017a19.95 19.95 0 0 1-4.337-.5 17.192 17.192 0 0 1-3.67 5.493 17.172 17.172 0 0 1-5.534 3.708L3 156.858h107.982L81.727 144.7z"
        stroke="#333"
        strokeWidth={4.655}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M25.736 90.652c3.92 8.064 10.614 14.343 18.735 17.621 0 0 .054-.229.147-.593-8.754-10.915-14.468-27.622-14.815-46.46h-7.366c-.084 0-.167.01-.253.01-4.543 1.621-7.815 5.924-7.815 11.027 0 10.017 5.064 18.111 11.367 18.396v.004-.004z"
        fill="#EAC5BD"
      />
      <path
        d="M69.514 108.273c8.112-3.276 14.805-9.548 18.732-17.621v25.216c0 11.123-8.979 20.132-20.053 20.132H45.78h.016c-11.083 0-20.06-9.009-20.06-20.123V90.652c3.92 8.064 10.614 14.343 18.735 17.621 0 0 .558-2.256 1.244-5.007.686-2.756 3.708-5.008 6.717-5.008h9.114c3.006 0 6.03 2.254 6.717 5.008l1.25 5.007zM22.186 61.221h18.251c14.19 0 27.026-5.772 36.321-15.094h.007c0 8.337 6.724 15.094 15.038 15.094V40.378c0-8.337-6.73-15.095-15.045-15.095-2.171 0-4.222.479-6.084 1.31-5.097-3.963-11.467-6.338-18.41-6.338-16.614 0-30.078 13.517-30.078 30.186v10.78z"
        stroke="#333"
        strokeWidth={4.655}
        fill="#333"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M69.514 108.273l-1.254-5.007c-.685-2.756-3.708-5.008-6.717-5.008H52.43c-3.006 0-6.03 2.254-6.716 5.008-.686 2.753-1.244 5.007-1.244 5.007-8.112-3.276-14.806-9.548-18.735-17.614v-.014c-6.31-.28-11.37-8.384-11.37-18.403 0-5.106 3.281-9.404 7.82-11.023V50.437c0-16.667 13.464-30.187 30.078-30.187 6.943 0 13.313 2.376 18.41 6.338a14.881 14.881 0 0 1 6.084-1.31c8.317 0 15.045 6.758 15.045 15.095v20.844c4.538 1.619 7.81 5.917 7.81 11.022 0 10.02-5.066 18.13-11.36 18.403 0 .007-.007.007-.007.014v-.007c-3.925 8.076-10.618 14.348-18.73 17.624z"
        stroke="#333"
        strokeWidth={4.655}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M52.9 106.35h8.202-8.203z"
        stroke="#FCD3C9"
        strokeWidth={4.655}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M135.009 3.14c-1.397 0-2.772.065-4.139.168 27.917 2.09 49.92 25.454 49.92 54.007v96.134l8.21 3.409V57.315c0-29.93-24.175-54.175-53.991-54.175z"
        fill="#E2BD53"
      />
      <path
        d="M110.975 156.858H189L159.742 144.7a17.146 17.146 0 0 1-5.533-3.708 17.07 17.07 0 0 1-4.997-12.098v-12.742c-4.334 3.052-9.144 4.743-14.2 4.743-5.058 0-9.87-1.694-14.211-4.743v12.742a17.1 17.1 0 0 1-4.99 12.098 17.097 17.097 0 0 1-5.533 3.708l-14.28 5.931 14.977 6.226z"
        stroke="#333"
        strokeWidth={4.655}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M107.818 61.219h-7.57l-.05.002A11.827 11.827 0 0 0 96 63.837c2.218 2.123 3.615 5.087 3.615 8.407 0 5.238-1.39 9.94-3.613 13.286 2.028 3.052 4.746 4.977 7.75 5.112 5.81 17.955 17.614 30.257 31.26 30.257 1.931 0 3.826-.273 5.681-.75-18.279-4.517-32.322-29.052-32.875-58.93z"
        fill="#EAC5BD"
      />
      <path
        d="M91.806 61.221a11.843 11.843 0 0 1 4.201 2.618 11.879 11.879 0 0 1 4.192-2.618h4.266a20.066 20.066 0 0 0-4.452-4.783v-16.06c0-6.599-2.758-12.556-7.161-16.803A54.882 54.882 0 0 0 88.1 30.56c2.276 2.639 3.708 6.043 3.708 9.819V61.22h-.002zm4.21 24.288c-2.027 3.066-4.747 5.005-7.76 5.136 0 .007-.008.007-.008.014v25.209c0 6.211-2.827 11.727-7.228 15.412v9.835c9.149-4.704 15.436-14.243 15.436-25.247V96.445c2.348-1.435 4.417-3.467 6.135-5.95-2.543-.518-4.815-2.33-6.575-4.986z"
        fill="#E2BD53"
      />
      <path
        d="M135.009 3.14c-20.114 0-37.621 11.053-46.914 27.417 2.276 2.639 3.708 6.043 3.708 9.818V61.22c4.539 1.62 7.81 5.917 7.81 11.023 0 10.019-5.066 18.13-11.36 18.403 0 .007-.007.007-.007.014v25.209c0 6.211-2.827 11.727-7.228 15.412v13.043c.242.114.46.27.709.378l29.25 12.157H189V57.315c0-29.93-24.175-54.175-53.991-54.175z"
        stroke="#333"
        strokeWidth={4.655}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M169.814 61.221c-8.307 0-15.031-6.764-15.031-15.101h-.01c-9.295 9.329-22.133 15.101-36.32 15.101h-18.259a11.813 11.813 0 0 0-4.192 2.618c2.218 2.119 3.611 5.085 3.611 8.407 0 5.227-1.395 9.905-3.61 13.249 2.029 3.064 4.735 5.017 7.749 5.154 5.805 17.953 17.602 30.254 31.255 30.254 13.643 0 25.449-12.299 31.261-30.254 6.294-.273 11.36-8.383 11.36-18.403.003-5.11-3.269-9.405-7.814-11.025z"
        stroke="#333"
        strokeWidth={4.655}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </g>
  </svg>
);

class SignupType extends React.PureComponent {
  render() {
    return (
      <div>
        <Head title="Create a profile | Apply to Date" />
        <Page>
          <main>
            <Text type="PageTitle">Create a page for:</Text>

            <div className="Row">
              <div className="Column">
                <Link href="/sign-up/verify">
                  <a className="ColumnCard">
                    <YourselfIcon />
                    <Text weight="bold" size="28px">
                      Yourself
                    </Text>
                  </a>
                </Link>
              </div>
              <div className="Column">
                <Link href="/sign-up/for-friend">
                  <a className="ColumnCard">
                    <FriendIcon />
                    <Text weight="bold" size="28px">
                      A friend
                    </Text>
                  </a>
                </Link>
              </div>
            </div>
          </main>
        </Page>
        <style jsx>{`
          main {
            margin-top: 50px;
            text-align: center;
          }

          .ColumnCard {
            background: #ffffff;
            box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.07);
            display: flex;
            flex-direction: column;
            justify-content: center;
            border-radius: 16px;
            align-items: center;
            height: 300px;
            width: 300px;
          }

          .Row {
            margin-top: 50px;
          }

          .ColumnCard > :global(svg) {
            margin-bottom: 24px;
          }

          .ColumnCard:hover {
            background-color: #fcfcfc;
            cursor: pointer;
          }

          .Row {
            display: grid;
            align-self: center;
            grid-auto-flow: column;
            grid-template-columns: 300px 300px;
            justify-content: center;
            grid-gap: 24px;
          }

          @media (max-width: 700px) {
            .Row {
              grid-template-columns: unset;
              grid-template-rows: 300px 300px;
            }
          }
        `}</style>
      </div>
    );
  }
}

const SignupTypeWithStore = withRedux(
  initStore,
  (state, props) => {
    return {
      currentUser: state.currentUserId ? state.user[state.currentUserId] : null
    };
  },
  dispatch => bindActionCreators({ updateEntities, setCurrentUser }, dispatch)
)(withLogin(SignupType));

export default SignupTypeWithStore;
